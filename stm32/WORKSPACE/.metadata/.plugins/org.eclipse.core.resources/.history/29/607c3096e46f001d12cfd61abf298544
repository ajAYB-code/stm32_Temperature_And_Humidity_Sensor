#include "stm32f4xx_hal_gpio.h"
#include "stm32f4xx_hal_msp.h"
#include "stm32f4xx_hal_tim.h"
#include "stm32f4xx_hal_uart.h"
#include "stm32f4xx_hal_i2c.h"
#include "leds.h"
#include "sw.h"
#include "lm75.h"
#include "lcd_128x32.h"

TIM_HandleTypeDef htim2;
TIM_HandleTypeDef htim5;
UART_HandleTypeDef huart2;
I2C_HandleTypeDef hi2c1;

uint8_t uart2_buf[10];

int temperature = 0;

//============================================================
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
	static int i=0;
	static int led_value=0;

	if (htim == &htim5)
	{
		i++; // MAJ LED
		if(led_value == 1){led_value = 0;}
		else if (led_value == 0){ led_value = 1; }

		red_led(led_value);
	}
}
//============================================================
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
	uint8_t c=0;

	if(huart == &huart2)
	{
		c = huart2.Instance->DR;
	}
}
//=====================================================================================
//		GPIO EXTERNAL INTERRUPT CALLBACK
//=====================================================================================
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
	switch(GPIO_Pin)
	{
	case GPIO_PIN_0 :
					break;
	case GPIO_PIN_4 : green_led(1);
					break;
	case GPIO_PIN_13 :	uart_printf(&huart2,(const uint8_t*)"USER BUTTON PUSHED\n\r");	// USER BUTTON
					break;
	default : 		break;

	}
}
//============================================================
int main()
{
	unsigned int prescalerValue;
	float temp_f = 0.0;

	HAL_MspInit(); // Initialisation des Broches

	red_led(0);
	blue_led(0);
	green_led(0);

	prescalerValue = (unsigned int) ((SystemCoreClock / 10000) - 1);
	htim5.Instance = TIM5;
	htim5.Init.Period = 500;
	htim5.Init.Prescaler = prescalerValue;
	HAL_TIM_Base_Init(&htim5);
	
	huart2.Instance          = USART2;
	huart2.Init.BaudRate     = 115200;
	huart2.Init.WordLength   = UART_WORDLENGTH_8B;
	huart2.Init.StopBits     = UART_STOPBITS_1;
	huart2.Init.Parity       = UART_PARITY_NONE;
	HAL_UART_Init(&huart2);
	HAL_UART_Receive_IT(&huart2, uart2_buf, 1);

	// TEST UART
	uart_printf(&huart2,(const uint8_t*)"BONJOUR\n\r");

    hi2c1.Instance = I2C1;
    HAL_I2C_Init(&hi2c1);

    htim2.Instance = TIM2;


    lcd_reset();


    cls();
    lcd_printf("test LCD");



    HAL_TIM_Base_Start_IT(&htim5);




	while(1)
	{

		 lm75_read_temp(&temperature);
		 temp_f=(float)temperature;
		 temp_f=temp_f/2.0;

		 uart_printf(&huart2,(const uint8_t*)"temperature = %f\n\r", temp_f);

		 green_led(1);
		 HAL_TIM_wait_ms(&htim2, 1000);
		 green_led(0);
		 HAL_TIM_wait_ms(&htim2, 1000);

		// TEST LEDS

		/*red_led(1);
		red_led(0);
		blue_led(1);
		blue_led(0);
		green_led(1);
		green_led(0);
*/
		// TEST SWITCHS
		if(sw_right_raw())
		{
			blue_led(1);
		}

		if(sw_left_raw())
		{
			red_led(1);
		}

		if(sw_center_raw())
		{
			green_led(1);
		}





	}

	return 0;
}


